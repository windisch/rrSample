// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// countCrossPoly
double countCrossPoly(int dim, int r);
RcppExport SEXP rrSample_countCrossPoly(SEXP dimSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    __result = Rcpp::wrap(countCrossPoly(dim, r));
    return __result;
END_RCPP
}
// fiberWalk
List fiberWalk(IntegerVector initial, IntegerMatrix moves, int diam, int length, bool showOutput);
RcppExport SEXP rrSample_fiberWalk(SEXP initialSEXP, SEXP movesSEXP, SEXP diamSEXP, SEXP lengthSEXP, SEXP showOutputSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type initial(initialSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type moves(movesSEXP);
    Rcpp::traits::input_parameter< int >::type diam(diamSEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    Rcpp::traits::input_parameter< bool >::type showOutput(showOutputSEXP);
    __result = Rcpp::wrap(fiberWalk(initial, moves, diam, length, showOutput));
    return __result;
END_RCPP
}
// sampleCrossPoly
IntegerVector sampleCrossPoly(int dim, int r, bool showOutput);
RcppExport SEXP rrSample_sampleCrossPoly(SEXP dimSEXP, SEXP rSEXP, SEXP showOutputSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< bool >::type showOutput(showOutputSEXP);
    __result = Rcpp::wrap(sampleCrossPoly(dim, r, showOutput));
    return __result;
END_RCPP
}
